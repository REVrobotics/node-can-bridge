#include <napi.h>
#include "canWrapper.h"

Napi::Object Init(Napi::Env env, Napi::Object exports) {
    exports.Set(Napi::String::New(env, "getDevices"),
                Napi::Function::New(env, getDevices));
    exports.Set(Napi::String::New(env, "registerDeviceToHAL"),
                Napi::Function::New(env, registerDeviceToHAL));
    exports.Set(Napi::String::New(env, "unregisterDeviceFromHAL"),
                Napi::Function::New(env, unregisterDeviceFromHAL));
    exports.Set(Napi::String::New(env, "receiveMessage"),
                Napi::Function::New(env, receiveMessage));
    exports.Set(Napi::String::New(env, "openStreamSession"),
                Napi::Function::New(env, openStreamSession));
    exports.Set(Napi::String::New(env, "readStreamSession"),
                Napi::Function::New(env, readStreamSession));
    exports.Set(Napi::String::New(env, "closeStreamSession"),
                Napi::Function::New(env, closeStreamSession));
    exports.Set(Napi::String::New(env, "getCANDetailStatus"),
                Napi::Function::New(env, getCANDetailStatus));
    exports.Set(Napi::String::New(env, "sendCANMessage"),
                Napi::Function::New(env, sendCANMessage));
    exports.Set(Napi::String::New(env, "sendRtrMessage"),
        Napi::Function::New(env, sendRtrMessage));
    exports.Set(Napi::String::New(env, "sendHALMessage"),
                Napi::Function::New(env, sendHALMessage));
    exports.Set(Napi::String::New(env, "initializeNotifier"),
                Napi::Function::New(env, initializeNotifier));
    exports.Set(Napi::String::New(env, "waitForNotifierAlarm"),
                Napi::Function::New(env, waitForNotifierAlarm));
    exports.Set(Napi::String::New(env, "stopNotifier"),
                Napi::Function::New(env, stopNotifier));
    exports.Set(Napi::String::New(env, "writeDfuToBin"),
    Napi::Function::New(env, writeDfuToBin));
    exports.Set(Napi::String::New(env, "getImageElements"),
                Napi::Function::New(env, getImageElements));
    exports.Set(Napi::String::New(env, "openHALStreamSession"),
                Napi::Function::New(env, openHALStreamSession));
    exports.Set(Napi::String::New(env, "readHALStreamSession"),
                Napi::Function::New(env, readHALStreamSession));
    exports.Set(Napi::String::New(env, "closeHALStreamSession"),
                Napi::Function::New(env, closeHALStreamSession));
    exports.Set(Napi::String::New(env, "setThreadPriority"),
                Napi::Function::New(env, setThreadPriority));
    exports.Set(Napi::String::New(env, "setSparkMaxHeartbeatData"),
                Napi::Function::New(env, setSparkMaxHeartbeatData));
    exports.Set(Napi::String::New(env, "startRevCommonHeartbeat"),
                Napi::Function::New(env, startRevCommonHeartbeat));
    exports.Set(Napi::String::New(env, "stopHeartbeats"),
                Napi::Function::New(env, stopHeartbeats));
    exports.Set(Napi::String::New(env, "ackHeartbeats"),
                Napi::Function::New(env, ackHeartbeats));
    exports.Set(Napi::String::New(env, "getTimestampsForAllReceivedMessages"),
                Napi::Function::New(env, getTimestampsForAllReceivedMessages));
    return exports;
}

NODE_API_MODULE(addon, Init);
